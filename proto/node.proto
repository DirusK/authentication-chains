/*
 * Copyright Â© 2023 Khruslov Dmytro khruslov.work@gmail.com
 */

syntax = "proto3";

option go_package = "internal/types";

//import "google/protobuf/empty.proto";
import "blocks.proto";
import "authentication.proto";
import "peers.proto";
import "message.proto";
import "status.proto";

package blockchain;

service Node {
    rpc GetStatus (StatusRequest) returns (StatusResponse) {}
    rpc GetBlock (BlockRequest) returns (BlockResponse) {}
    rpc GetBlocks (BlocksRequest) returns (BlocksResponse) {}
    rpc GetPeers (PeersRequest) returns (PeersResponse) {}

//    rpc FindBlock(FindBlockRequest) returns (FindBlockResponse) {}

    rpc SendMessage (Message) returns (Message) {}
    rpc SendDAR (DeviceAuthenticationRequest) returns (DeviceAuthenticationResponse) {}
    rpc SendBlock (BlockValidationRequest) returns (BlockValidationResponse) {}

    rpc VerifyDevice (VerifyDeviceRequest) returns (VerifyDeviceResponse) {}
    rpc RegisterNode (NodeRegistrationRequest) returns (NodeRegistrationResponse) {}
}

message NodeRegistrationRequest {
    Peer node = 1;
    DeviceAuthenticationRequest dar = 2;
}

message NodeRegistrationResponse {
    bytes genesis_hash = 1;
    repeated Peer peers = 2;
}
